--- a/cmake/build_helpers.cmake
+++ b/cmake/build_helpers.cmake
@@ -563,7 +563,7 @@ macro(setupCompilerFlags target)
     if(CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
         # Define strict compilation flags
         if (IMHEX_STRICT_WARNINGS)
-            set(IMHEX_COMMON_FLAGS "${IMHEX_COMMON_FLAGS} -Wall -Wextra -Wpedantic -Werror")
+            set(IMHEX_COMMON_FLAGS "${IMHEX_COMMON_FLAGS} -Wall -Wextra -Wpedantic")
         endif()
 
         if (UNIX AND NOT APPLE AND CMAKE_CXX_COMPILER_ID MATCHES "GNU")
@@ -871,4 +871,4 @@ function(precompileHeaders target includeFolder)
             PUBLIC
             "$<$<COMPILE_LANGUAGE:CXX>:${INCLUDES}>"
     )
-endfunction()
\ No newline at end of file
+endfunction()
--- a/lib/external/pattern_language/cli/CMakeLists.txt
+++ b/lib/external/pattern_language/cli/CMakeLists.txt
@@ -29,7 +29,7 @@ else()
     find_package(CLI11 CONFIG QUIET)
 endif()
 
-target_compile_options(plcli PRIVATE -Wall -Wextra -Werror -Wno-unknown-pragmas -Wno-array-bounds)
+target_compile_options(plcli PRIVATE -Wall -Wextra -Wno-unknown-pragmas -Wno-array-bounds)
 target_include_directories(plcli PUBLIC include ${CLI11_INCLUDE_DIRS})
 target_link_libraries(plcli PRIVATE ${CLI11_LIBRARIES} ${NLOHMANN_JSON_LIBRARIES} libpl libpl-gen ${FMT_LIBRARIES})
 
--- a/lib/external/pattern_language/lib/CMakeLists.txt
+++ b/lib/external/pattern_language/lib/CMakeLists.txt
@@ -86,7 +86,7 @@ if (LIBPL_ENABLE_PRECOMPILED_HEADERS)
 endif ()
 
 if(CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
-    target_compile_options(libpl PRIVATE -Wall -Wextra -Werror -Wpedantic -Wno-unknown-pragmas -Wno-array-bounds)
+    target_compile_options(libpl PRIVATE -Wall -Wextra -Wpedantic -Wno-unknown-pragmas -Wno-array-bounds)
     if(CMAKE_CXX_COMPILER_ID MATCHES "GNU")
         target_compile_options(libpl PRIVATE -Wno-stringop-overflow)
     endif()

